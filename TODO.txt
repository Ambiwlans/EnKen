###########
CUR
###########        

+ DB
    + add wikitags, toefl, grade level estimates, categories? (like 'medical','archaic')       
        - many-many relational table
        
+++++++++++
MAIN
+++++++++++

Tweaking:
    
DB:
    ? save pred to testlog
    - join data from wiki
        ? paste in defns over 'alt of'....
        ? easy way to swap definitions to ones from wiki
        + need to keep under 5MB limit
        
Front end:
    - rearrage FP?
    - links to multiple dictionaries!
	- new 'help' button images
    	- reenable button
    ? report definition button
        + popup that allows user to reccomend a definition
        + puts the text into a log (word id + suggestion) i can check manually later
        ? simply adds the word to a list to check (no security risks, less space, easy)
    ? better message for attempting to continue a timed out test? (rarely comes up)
    - fix fitting for long definitions, words
        
History:
    ? better catches for bad links
    + 'wrong' list
        - filter by tags
    - show histogram of historical user scores and place user on it
        + calc on startup (w/ weekly updater) and save to redis
        - bin by 500?
        + graph adds the user line
    
Bugs:
    + the scaler isn't multiplying correctly, it looks like it is getting clipped/rounded and then multiplied so its all x5.0
    - test_log should ideally store num_known as well instead of just using 'a' which isn't quite accurate for comparisons
    ? words at extremes aren't reshuffling w/ l2r (like entest)
    ?? forcemetaupdate throwing a timeout with no error msgs... randomly twice, then it worked fine. (was cpu sleeping?)
    - hitting f5 shouldn't post during test
        - are we correctly only recording the first time?
    
Study Mode:
    - 2 options
        - review mode
            - drill missed words from a completed test, only available after finishing
        + endless study mode
            - asks questions normally until you have 5 missed questions, then start working in repeat questions until you have cleared each question
            - only record the first answer given per question, otherwise keep tabs in a redis only array? Or add col to redis question log table
            - setting for how times to repeat a missed question, and how many missed questions to stack up.
            - focus on asking questions closer to the 50:50 mark
            - keep some extra stats (in session only)
    
Misc:
	+ redo the readme for github
	+ beta testing
	
CORE/BOTH:
    + DRILL PAGE/FEATURE
    - update packages/python, trim reqs
    ? identify magic numbers w/ inline comments
    - move scheduler times into config
    - add a full reset fn to admin page (set config TEST_TIMEOUT to 0, force update)
    - range prediction should change more based on # asked
        - rerun every 'normal' logged test w/ over 50 answers ..... (Only ever need to do this once)
            - compare each step's difference in estimation (as a % of the final value)
                - ie. 20, 23, 25, 22, 17, 15, 11, 14, 9, 7, 4, 4, 4, 4, 3, 3, 2, 3 .....
            - compare all tests to find the 90 percentile for each step (should be smooth)
                - ie. 50, 40, 35, 30, 28, 27, 25, 23, 22, 20, 18

+++++++++++
    
Fork (Keep jiken in mind EVERY git commit):
    + go through git log to find changes to push across
    
+++++++++++
LATER
+++++++++++
+ reduce step size for l2r
+ set test timeout back to 1hr
- in /test it should show latest nodes
    
+++++++++++
MAYBE
+++++++++++
- export list to anki
? change to a left side, rightside algorithm to fit, rather than sigmoid
- make 'more...' a framed popup to avoid leaving site/test
- show user other tests from same ip. links, graph
? log blocks of questions in test and drop this table entirely? (incorrect way to do it, but handles the 10k cap better)
? change colour scheme? Dark mode?
? merger of all testing thingies? Select a from and to (kanji->english, eng->eng) .... some losses from going generic, easier to maintain, harder to build... vocab only?
? switch to dictionary api? (free is normally 100s/hr which is like 1~2 users only lol)
    https://medium.com/@martin.breuss/finding-a-useful-dictionary-api-52084a01503d
? change the dictionary for simpler words to cut down on complexity
    - https://dictionaryapi.com/ allows 1k/day, wordnik.com allows 100/hr ... enough to rebuild DB, but not grab live (check permissions)
    - https://medium.com/@martin.breuss/finding-a-useful-dictionary-api-52084a01503d
    - use a 'learner's dictionary' for 5000 basic words
    - manually rewrite the easiest and longest 100.
    - multiple languages/setting? (german, japanese definitions?) (E-J test ...)
    ? Use the wiktionary DB i ripped/made ........ but the '1st definition' system is questionable. If I switch, I'd need to allow multiple definitions
        - also need to re-rip since i bugged out antonyms somehow
? Add categories for top 25 'topics' from wiktionary data set, enable this in history somehow
